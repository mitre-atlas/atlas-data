---
# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Note that the Gitlab Runner machine is configured to use MITRE repo
image: python:3

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V
  - python -m venv venv
  - source venv/bin/activate
  - pip install --progress-bar off -r tools/requirements.txt

lint yaml:
  stage: test
  script:
    - pip install --progress-bar off -r tests/requirements.txt
    - yamllint -c tests/.yamllint .
  rules:
    - changes:
        - "*.yaml"
        - "*.yml"

check spelling and syntax:
  stage: test
  script:
    - pip install --progress-bar off -r tests/requirements.txt
    # Run tests with minimal console output, produce report, and error on warnings
    - pytest tests/test_syntax.py --tb=line --junitxml=report.xml -W error::UserWarning
  allow_failure:
    exit_codes:
      - 1   # Tests were collected and run but some tests failed https://docs.pytest.org/en/latest/reference/exit-codes.html
  rules:
    - changes:
        - data/*.yaml   # Source data was updated
        - tests/*.py    # Any tests changed
        - tests/custom_words.txt    # Exclusion words updated
        - conftest.py   # Any test fixtures changed

validate data:
  stage: test
  script:
    - pip install --progress-bar off -r tests/requirements.txt
    # Run tests with minimal console output, produce report, and output warnings
    - pytest --tb=line --junitxml=report.xml -W default::UserWarning
    - yamllint -c tests/.yamllint .
  artifacts:
    when: always
    reports:
      junit: report.xml
  rules:
    - changes:
        - data/*.yaml   # Source data was updated
        - tests/*.py    # Any tests changed
        - conftest.py   # Any test fixtures changed

# Checks that a generated ATLAS.yaml matches the one commited to this project.
# Fails if they are different, only runs on merge requests or protected branches
check ATLAS.yaml up-to-date:
  stage: test
  script:
    - python tools/create_matrix.py
    - git diff --exit-code dist/ATLAS.yaml || exit_code=$?
    - if [[ $exit_code -ne 0 ]]; then echo 'Runner-generated dist/ATLAS.yaml is different from remote repository version - run tools/create_matrix.py to update and commit the result.'; exit 123; fi;
  rules:
    # Default branch, main, tags, and all types of merge request pipelines.
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_COMMIT_BRANCH == "main"'
